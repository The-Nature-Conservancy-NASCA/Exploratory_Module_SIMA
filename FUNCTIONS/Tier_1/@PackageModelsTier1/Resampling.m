function [ErrosFootprints, Areas] = Resampling(obj, DEM, varargin)
% -------------------------------------------------------------------------
% Matlab Version - R2018b 
% -------------------------------------------------------------------------
%                              BASE DATA 
%--------------------------------------------------------------------------
% Author        : Jonathan Nogales Pimentel
% Email         : jonathannogales02@gmail.com
% Occupation    : Hydrology Specialist
% Company       : The Nature Conservancy - TNC
% Date          : October, 2018
%
%--------------------------------------------------------------------------
% This program is free software: you can redistribute it and/or modify it 
% under the terms of the GNU General Public License as published by the 
% Free Software Foundation, either version 3 of the License, or option) any 
% later version. This program is distributed in the hope that it will be 
% useful, but WITHOUT ANY WARRANTY; without even the implied warranty of 
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
% ee the GNU General Public License for more details. You should have 
% received a copy of the GNU General Public License along with this program
% If not, see http://www.gnu.org/licenses/.
%--------------------------------------------------------------------------
%                               DESCRIPTION 
%--------------------------------------------------------------------------
% This function estimate the footprint that generated by the projects 
% in differents Areas 
%--------------------------------------------------------------------------
%                               INPUT DATA 
%--------------------------------------------------------------------------
%
%   DEM         [GRIDobj]                   = Digital Elevation Model
%   Hp          [ClassHydroelectricProject] = Hydropower Development plan
%   Network     [ClassNetwork]              = Tological Network
%   Threshold   [integer]                   = Amoung of cell by create a basin
%   FuncNetwork [w,z,m]                     = topological network fragmentation 
%                                             with the projects analysed in 
%                                             every scenario.
%   varargin
%       1. FlowDir   [FLOWobj] = Direction flow 
%       2. FlowAccum [GRIDobj] = Accumulate flow 
%       3. Area      [Matrix]  = Areas of the internet social, environment 
%                                and economic
%       ... n Areas
%
%--------------------------------------------------------------------------
%                              OUTPUT DATA 
%--------------------------------------------------------------------------
% n = Factor 
% m = Project Number 
% k = Areas Number 
%
% ErrosFootprints   [integer]       = Error of the Code
% Factor            [n]             = Percentage of height of each project
% Varargout
%   .Area_Hp           [n,m]        = Factor Vs Area Curve of the projects
%   .Volumen_Hp        [n,m]        = Factor Vs Volumen Curve of the projects
%   .Footprint_Hp      [n,m,k]      = Footprint of the project 
%   .WaterMirrorDams   [GRIDobj]    = Water Mirror of the projects
%
%--------------------------------------------------------------------------
%                              REFERENCES
%--------------------------------------------------------------------------
% - https://www.nature.org/media/freshwater/power-of-rivers-report.pdf
% - https://www.seforall.org/sites/default/files/powerofriversreport_final1.pdf
%

ErrosFootprints = 0;

if (nargin >= 3)
    
    Xmin    = DEM.georef.SpatialRef.XWorldLimits(1);
    Xmax    = DEM.georef.SpatialRef.XWorldLimits(2);
    Ymin    = DEM.georef.SpatialRef.YWorldLimits(1);
    Ymax    = DEM.georef.SpatialRef.YWorldLimits(2);
    X_DEM   = round(linspace(Xmin,Xmax,DEM.size(2)),3);
    Y_DEM   = round(linspace(Ymax,Ymin,DEM.size(1)),3);
    [Xq,Yq] = meshgrid(X_DEM, Y_DEM);
    
    % Get Area
    for i = 1:length(varargin)
        tic
        if ~isa(varargin{i}, 'GRIDobj')
            ErrosFootprints = 3;
            disp(['The Area_',num2str(i),' do not is one GRIDobj'])
            return
        end
        
        % Interpolation Areas 
        Xmin = varargin{i}.georef.SpatialRef.XWorldLimits(1);
        Xmax = varargin{i}.georef.SpatialRef.XWorldLimits(2);
        Ymin = varargin{i}.georef.SpatialRef.YWorldLimits(1);
        Ymax = varargin{i}.georef.SpatialRef.YWorldLimits(2);
        
        [xq,yq] = meshgrid(round(linspace(Xmin,Xmax,varargin{i}.size(2))), round(linspace(Ymax,Ymin,varargin{i}.size(1))));
        
        Zq = griddata(xq,yq,double(varargin{i}.Z),Xq,Yq,'nearest');
        eval(['Areas.A',num2str(i),' = [find(~isnan(Zq)), Zq(~isnan(Zq))];'])
        toc
    end
    
else
    ErrosFootprints = 1;
end